{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/Comment.jsx","components/PostDetails/CommenstList.jsx","components/PostDetails/PostDetails.jsx","api/api.js","api/posts.js","App.jsx","index.js"],"names":["Loader","className","PostsList","getUserPosts","userSelect","selectedPostId","setSelectedPostId","loadPostDetails","useState","posts","setPosts","useEffect","then","data","map","post","key","id","userId","title","type","onClick","defaultProps","NewCommentForm","name","placeholder","Comment","comment","CommentsList","postComments","PostDetails","selectedPostDetails","body","BASE_URL","a","fetch","response","json","result","filteredPostsByUser","filter","getPostDetails","postId","getPostComments","App","setUserSelect","setSelectedPostDetails","setPostComments","Promise","all","postDetails","comments","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48b06df5.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../Loader';\n\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  getUserPosts,\n  userSelect,\n  selectedPostId,\n  setSelectedPostId,\n  loadPostDetails,\n}) => {\n  // const [chosenUser, setChosenUser] = useState(null);\n  const [posts, setPosts] = useState('');\n  // const [postDetailsOpen, setPostDetailsOpen] = useState(null);\n\n  const onTogglePostDetails = (id) => {\n    // setSelectedPostId(id);\n    loadPostDetails(id);\n\n    if (selectedPostId === id) {\n      setSelectedPostId(null);\n\n      return;\n    }\n\n    setSelectedPostId(id);\n  };\n\n  useEffect(() => {\n    getUserPosts(userSelect)\n      .then((data) => {\n        // console.log(data);\n        setPosts(data);\n      });\n  }, [userSelect]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        { (posts)\n          ? posts.map(post => (\n            <li\n              key={post.id}\n              className=\"PostsList__item\"\n            >\n              <div>\n                <b>\n                  [User\n                  {post.userId}\n                  ]:\n                </b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => onTogglePostDetails(post.id)}\n              >\n                {\n                  selectedPostId === post.id ? `Close` : 'Open'\n                }\n              </button>\n            </li>\n          ))\n          : <Loader />\n        }\n\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  getUserPosts: PropTypes.func.isRequired,\n  userSelect: PropTypes.string.isRequired,\n  selectedPostId: PropTypes.number,\n  loadPostDetails: PropTypes.func.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: null,\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Comment = ({ comment }) => (\n  // console.log(comment);\n\n  // return (\n  <>\n    <button\n      type=\"button\"\n      className=\"PostDetails__remove-button button\"\n    >\n      X\n    </button>\n    <p>{comment.id}</p>\n  </>\n);\n// };\n\nComment.propTypes = {\n  comment: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nimport { Comment } from './Comment';\n\nexport const CommentsList = ({ postComments }) => (\n  <ul className=\"PostDetails__list\">\n    {postComments.map(comment => (\n      <li\n        key={comment.id}\n        className=\"PostDetails__list-item\"\n      >\n        <Comment comment={comment} />\n      </li>\n    ))}\n\n  </ul>\n);\n\nCommentsList.propTypes = {\n  postComments: PropTypes.arrayOf(object).isRequired,\n};\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { CommentsList } from './CommenstList';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostDetails, postComments }) => (\n  <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n\n    <section className=\"PostDetails__post\">\n      <p>{selectedPostDetails.body}</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n      <button type=\"button\" className=\"button\">Hide 2 comments</button>\n      <CommentsList postComments={postComments} />\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm />\n      </div>\n    </section>\n  </div>\n);\n\nPostDetails.propTypes = {\n  selectedPostDetails: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n  postComments: PropTypes.arrayOf(object).isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\n// export const getAllPosts = async(userId) => {\n//   const response = await\n//   fetch(`${BASE_URL}/posts/${userId}`);\n//   const data = await response.json();\n//   const result = data.data;\n\n//   return result;\n// };\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const data = await response.json();\n  const result = data.data;\n\n  if (userId !== '0') {\n    const filteredPostsByUser = result.filter(post => post.userId === +userId);\n\n    return filteredPostsByUser;\n  }\n\n  return result;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const data = await response.json();\n\n  return data.data;\n};\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const data = await response.json();\n\n  return data.data.filter(comment => postId === comment.id);\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getPostDetails, getPostComments } from './api/posts';\n\nconst App = () => {\n  const [userSelect, setUserSelect] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedPostDetails, setSelectedPostDetails] = useState(null);\n  const [postComments, setPostComments] = useState([]);\n\n  const loadPostDetails = async(id) => {\n    const [postDetails, comments] = await Promise.all(\n      [getPostDetails(id), getPostComments(id)],\n    );\n\n    setSelectedPostDetails(postDetails);\n    setPostComments(comments);\n  };\n\n  // console.log(selectedPostId);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserSelect(event.target.value);\n              // console.log(event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            getUserPosts={getUserPosts}\n            userSelect={userSelect}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            loadPostDetails={loadPostDetails}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPostDetails && selectedPostId\n            && (\n              <PostDetails\n                selectedPostId={selectedPostId}\n                getPostDetails={getPostDetails}\n                selectedPostDetails={selectedPostDetails}\n                postComments={postComments}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}