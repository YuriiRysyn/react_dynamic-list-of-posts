{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/Comment.jsx","components/PostDetails/CommenstList.jsx","components/PostDetails/PostDetails.jsx","api/api.js","api/posts.js","api/comments.js","App.jsx","index.js"],"names":["Loader","className","PostsList","getUserPosts","userSelect","selectedPostId","setSelectedPostId","loadPostDetails","useState","posts","setPosts","useEffect","then","data","map","post","key","id","userId","title","type","classNames","opened","onClick","defaultProps","NewCommentForm","addComment","name","email","body","comment","setComment","setCommentPart","value","prevComment","onSubmit","event","preventDefault","newComment","postId","placeholder","onChange","target","Comment","deleteComment","CommentsList","postComments","PostDetails","selectedPostDetails","hideComments","setHideComments","length","BASE_URL","a","fetch","json","response","result","filteredPostsByUser","filter","getPostDetails","getPostComments","addPostComment","url","options","method","JSON","stringify","deletePostComment","commentId","App","setUserSelect","setSelectedPostDetails","setPostComments","Promise","all","postDetails","comments","prevState","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da800445.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { Loader } from '../Loader';\n\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  getUserPosts,\n  userSelect,\n  selectedPostId,\n  setSelectedPostId,\n  loadPostDetails,\n}) => {\n  const [posts, setPosts] = useState('');\n\n  const onTogglePostDetails = (id) => {\n    loadPostDetails(id);\n\n    if (selectedPostId === id) {\n      setSelectedPostId(null);\n\n      return;\n    }\n\n    setSelectedPostId(id);\n  };\n\n  useEffect(() => {\n    getUserPosts(userSelect)\n      .then((data) => {\n        setPosts(data);\n      });\n  }, [userSelect]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        { (posts)\n          ? posts.map(post => (\n            <li\n              key={post.id}\n              className=\"PostsList__item\"\n            >\n              <div>\n                <b>\n                  [User\n                  {post.userId}\n                  ]:\n                </b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className={(classNames(\n                  'PostsList__button button',\n                  { opened: selectedPostId === post.id },\n                ))}\n\n                onClick={() => onTogglePostDetails(post.id)}\n              >\n                {\n                  selectedPostId === post.id ? `Close` : 'Open'\n                }\n              </button>\n            </li>\n          ))\n          : <Loader />\n        }\n\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  getUserPosts: PropTypes.func.isRequired,\n  userSelect: PropTypes.string.isRequired,\n  selectedPostId: PropTypes.number,\n  loadPostDetails: PropTypes.func.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: null,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, addComment }) => {\n  const [comment, setComment] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const setCommentPart = (key, value) => {\n    setComment(prevComment => ({\n      ...prevComment,\n      [key]: value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      ...comment,\n      postId: selectedPostId,\n    };\n\n    addComment(newComment);\n\n    setComment({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={comment.name}\n          onChange={({ target }) => setCommentPart(target.name, target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={comment.email}\n          onChange={({ target }) => setCommentPart(target.name, target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment.body}\n          onChange={({ target }) => setCommentPart(target.name, target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Comment = ({ comment, deleteComment }) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"PostDetails__remove-button button\"\n      onClick={() => deleteComment(comment.id)}\n    >\n      X\n    </button>\n    <h4>{comment.name}</h4>\n    <p>{comment.body}</p>\n  </>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nimport { Comment } from './Comment';\n\nexport const CommentsList = ({ postComments, deleteComment }) => (\n  <ul className=\"PostDetails__list\">\n    {postComments.map(comment => (\n      <li\n        key={comment.id}\n        className=\"PostDetails__list-item\"\n      >\n        <Comment comment={comment} deleteComment={deleteComment} />\n      </li>\n    ))}\n\n  </ul>\n);\n\nCommentsList.propTypes = {\n  postComments: PropTypes.arrayOf(object).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { CommentsList } from './CommenstList';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({\n  selectedPostDetails,\n  postComments,\n  selectedPostId,\n  addComment,\n  deleteComment,\n}) => {\n  const [hideComments, setHideComments] = useState(false);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPostDetails.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {postComments.length !== 0\n        && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setHideComments(!hideComments)}\n          >\n            {!hideComments ? 'Hide ' : 'Show '}\n            { postComments.length }\n            { postComments.length === 1 ? ' comment' : ' comments'}\n          </button>\n        )\n        }\n\n        {!hideComments\n        && (\n          <CommentsList\n            postComments={postComments}\n            deleteComment={deleteComment}\n          />\n        )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n  selectedPostDetails: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n  postComments: PropTypes.arrayOf(object).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = await (await fetch(`${BASE_URL}/posts`)).json();\n  const result = response.data;\n\n  if (userId !== '0') {\n    const filteredPostsByUser = result.filter(post => post.userId === +userId);\n\n    return filteredPostsByUser;\n  }\n\n  return result;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const result = await response.json();\n\n  return result.data;\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const result = await response.json();\n\n  return result.data.filter(comment => comment.postId === postId);\n};\n\nexport const addPostComment = (newComment) => {\n  const url = `${BASE_URL}/comments`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n  };\n\n  return fetch(url, options)\n    .then(result => result.json());\n};\n\nexport const deletePostComment = (commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(url, options)\n    .then(result => result.json());\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getPostDetails } from './api/posts';\nimport {\n  getPostComments,\n  addPostComment,\n  deletePostComment,\n} from './api/comments';\n\nconst App = () => {\n  const [userSelect, setUserSelect] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedPostDetails, setSelectedPostDetails] = useState(null);\n  const [postComments, setPostComments] = useState([]);\n\n  const loadPostDetails = async(id) => {\n    const [postDetails, comments] = await Promise.all(\n      [getPostDetails(id), getPostComments(id)],\n    );\n\n    setSelectedPostDetails(postDetails);\n    setPostComments(comments);\n  };\n\n  const addComment = async(newComment) => {\n    const comment = await addPostComment(newComment);\n\n    setPostComments(prevState => [...prevState, comment.data]);\n  };\n\n  const deleteComment = async(commentId) => {\n    await deletePostComment(commentId);\n\n    setPostComments(prevState => prevState\n      .filter(item => item.id !== commentId));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => {\n              setUserSelect(target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            getUserPosts={getUserPosts}\n            userSelect={userSelect}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            loadPostDetails={loadPostDetails}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPostDetails && selectedPostId\n            && (\n              <PostDetails\n                selectedPostId={selectedPostId}\n                getPostDetails={getPostDetails}\n                selectedPostDetails={selectedPostDetails}\n                postComments={postComments}\n                addComment={addComment}\n                deleteComment={deleteComment}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}