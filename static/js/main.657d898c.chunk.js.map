{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/Comment.jsx","components/PostDetails/CommenstList.jsx","components/PostDetails/PostDetails.jsx","api/api.js","api/posts.js","api/comments.js","App.jsx","index.js"],"names":["Loader","className","PostsList","getUserPosts","userSelect","selectedPostId","setSelectedPostId","loadPostDetails","useState","posts","setPosts","useEffect","then","data","map","post","key","id","userId","title","type","classNames","opened","onClick","defaultProps","NewCommentForm","addComment","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","postId","placeholder","value","onChange","target","Comment","comment","deleteComment","CommentsList","postComments","PostDetails","selectedPostDetails","hideComments","setHideComments","length","BASE_URL","a","fetch","response","json","result","filteredPostsByUser","filter","getPostDetails","getPostComments","addPostComments","newComment","url","options","method","JSON","stringify","deletePostComments","commentId","App","setUserSelect","setSelectedPostDetails","setPostComments","Promise","all","postDetails","comments","prevState","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.657d898c.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\n\nimport { Loader } from '../Loader';\n\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  getUserPosts,\n  userSelect,\n  selectedPostId,\n  setSelectedPostId,\n  loadPostDetails,\n}) => {\n  const [posts, setPosts] = useState('');\n\n  const onTogglePostDetails = (id) => {\n    loadPostDetails(id);\n\n    if (selectedPostId === id) {\n      setSelectedPostId(null);\n\n      return;\n    }\n\n    setSelectedPostId(id);\n  };\n\n  useEffect(() => {\n    getUserPosts(userSelect)\n      .then((data) => {\n        setPosts(data);\n      });\n  }, [userSelect]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        { (posts)\n          ? posts.map(post => (\n            <li\n              key={post.id}\n              className=\"PostsList__item\"\n            >\n              <div>\n                <b>\n                  [User\n                  {post.userId}\n                  ]:\n                </b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className={(classNames(\n                  'PostsList__button button',\n                  { opened: selectedPostId === post.id },\n                ))}\n\n                onClick={() => onTogglePostDetails(post.id)}\n              >\n                {\n                  selectedPostId === post.id ? `Close` : 'Open'\n                }\n              </button>\n            </li>\n          ))\n          : <Loader />\n        }\n\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  getUserPosts: PropTypes.func.isRequired,\n  userSelect: PropTypes.string.isRequired,\n  selectedPostId: PropTypes.number,\n  loadPostDetails: PropTypes.func.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: null,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newComment = {\n      name,\n      email,\n      body,\n      postId: selectedPostId,\n    };\n\n    addComment(newComment);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Comment = ({ comment, deleteComment }) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"PostDetails__remove-button button\"\n      onClick={() => deleteComment(comment.id)}\n    >\n      X\n    </button>\n    <h4>{comment.name}</h4>\n    <p>{comment.body}</p>\n  </>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\n\nimport { Comment } from './Comment';\n\nexport const CommentsList = ({ postComments, deleteComment }) => (\n  <ul className=\"PostDetails__list\">\n    {postComments.map(comment => (\n      <li\n        key={comment.id}\n        className=\"PostDetails__list-item\"\n      >\n        <Comment comment={comment} deleteComment={deleteComment} />\n      </li>\n    ))}\n\n  </ul>\n);\n\nCommentsList.propTypes = {\n  postComments: PropTypes.arrayOf(object).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { CommentsList } from './CommenstList';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({\n  selectedPostDetails,\n  postComments,\n  selectedPostId,\n  addComment,\n  deleteComment,\n}) => {\n  const [hideComments, setHideComments] = useState(false);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPostDetails.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setHideComments(!hideComments)}\n        >\n          {!hideComments ? 'Hide ' : 'Show '}\n          { postComments.length }\n          { postComments.length === 1 ? ' comment' : ' comments'}\n        </button>\n        {!hideComments\n        && (\n          <CommentsList\n            postComments={postComments}\n            deleteComment={deleteComment}\n          />\n        )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n  selectedPostDetails: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n  postComments: PropTypes.arrayOf(object).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const data = await response.json();\n  const result = data.data;\n\n  if (userId !== '0') {\n    const filteredPostsByUser = result.filter(post => post.userId === +userId);\n\n    return filteredPostsByUser;\n  }\n\n  return result;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const data = await response.json();\n\n  return data.data;\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments`);\n  const data = await response.json();\n\n  return data.data.filter(comment => comment.postId === postId);\n};\n\nexport const addPostComments = (newComment) => {\n  const url = `${BASE_URL}/comments`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n  };\n\n  return fetch(url, options)\n    .then(result => result.json());\n};\n\nexport const deletePostComments = (commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(url, options)\n    .then(result => result.json());\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getPostDetails } from './api/posts';\nimport {\n  getPostComments,\n  addPostComments,\n  deletePostComments,\n} from './api/comments';\n\nconst App = () => {\n  const [userSelect, setUserSelect] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedPostDetails, setSelectedPostDetails] = useState(null);\n  const [postComments, setPostComments] = useState([]);\n\n  const loadPostDetails = async(id) => {\n    const [postDetails, comments] = await Promise.all(\n      [getPostDetails(id), getPostComments(id)],\n    );\n\n    setSelectedPostDetails(postDetails);\n    setPostComments(comments);\n  };\n\n  const addComment = async(newComment) => {\n    const comment = await addPostComments(newComment);\n\n    setPostComments(prevState => [...prevState, comment.data]);\n  };\n\n  const deleteComment = async(commentId) => {\n    await deletePostComments(commentId);\n\n    setPostComments(prevState => prevState\n      .filter(item => item.id !== commentId));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserSelect(event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            getUserPosts={getUserPosts}\n            userSelect={userSelect}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            loadPostDetails={loadPostDetails}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPostDetails && selectedPostId\n            && (\n              <PostDetails\n                selectedPostId={selectedPostId}\n                getPostDetails={getPostDetails}\n                selectedPostDetails={selectedPostDetails}\n                postComments={postComments}\n                addComment={addComment}\n                deleteComment={deleteComment}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}